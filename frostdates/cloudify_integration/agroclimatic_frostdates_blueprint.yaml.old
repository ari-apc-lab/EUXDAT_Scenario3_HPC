tosca_definitions_version: cloudify_dsl_1_3

imports:
  - http://www.getcloudify.org/spec/cloudify/4.3/types.yaml
  - http://www.getcloudify.org/spec/kubernetes-plugin/2.3.2/plugin.yaml

inputs:

  kubernetes_master_configuration:
    default:
      host: 'https://192.168.1.11:6443'
      api_key: { get_secret: kubernetes_token }
      debug: false
      verify_ssl: false

  kubernetes_api_options:
    description: >
      kubernetes api options
    default: { get_input: kubernetes_master_configuration }
  
  username:
    type: string

  process_id:
    type: string

  data_path:
    type: string
    default: /data/git/sc3_agroclimatic/frostdates/cloudify_integration/data/
    
  apache_path:
    type: string
    default: /data/euxdat-apache/agroclimatic_zones_scenario_outputs/
  
  apache_url:
    type: string
    default: https://apache.test.euxdat.eu/agroclimatic_zones_scenario_outputs/

  output_folderpath:
    type: string
    default: { concat: [ get_input: apache_path, get_input: username, '/frostdates/' ]}

  output_folderurl:
    type: string
    default: { concat: [ get_input: apache_url, get_input: username, '/frostdates/' ]}

  day_in_row:
    type: string
    description: >
      how many frost days in row is last/first frost date
      
  start_hour_day:
    type: string
    description: >
      integer 0-23, we can select only sunrise hours
      
  end_hour_day:
    type: string
    description: >
      integer 0-23, we can select only sunrise hours
      
  frost_degree:
    type: string
    description: >
      may be 0 or different such as -2
      
  start_year:
    type: string
      
  end_year:
    type: string
      
  probability:
    type: string
    description: >
      probability (percent) of frost date (integer 10-90)
      
  start_lon:
    type: string
    description: >
      start number of list of longitudes from used netCDF4 file (sample data: 0-19)
      
  start_lat:
    type: string
    description: >
      start number of list of latitudes from used netCDF4 file (sample data: 0-29)
      
  end_lon:
    type: string
    description: >
      end number of list of longitudes from used netCDF4 file (sample data: 0-19)
      
  end_lat:
    type: string
    description: >
      end number of list of latitudes from used netCDF4 file (sample data: 0-29)
      
  user_logs_filename:
    default: debug.log
    type: string

node_templates:

  kubernetes_master:
    type: cloudify.kubernetes.nodes.Master
    properties:
      configuration:
        api_options: { get_input: kubernetes_api_options }
  
  agroclimatic_frostdate_job:
    type: cloudify.kubernetes.resources.Pod
    properties:
      definition:
        apiVersion: v1
        kind: Pod
        metadata:
          name: { concat: [ 'agroclimatic-frostdates-', get_input: process_id ]}
        spec:
          restartPolicy: Never
          containers:
          - name: { concat: [ 'agroclimatic-frostdates-', get_input: process_id ]}
            image: registry.test.euxdat.eu/euxdat/agroclimatic_zone_frostdates
            env:
            - name: DATA_FOLDER
              value: /frostdates/data
            - name: EXPORT_FOLDER
              value: /frostdates/export
            - name: DAY_IN_ROW
              value: { get_input: day_in_row}
            - name: START_HOUR_DAY
              value: { get_input: start_hour_day}
            - name: END_HOUR_DAY
              value: { get_input: end_hour_day}
            - name: FROST_DEGREE
              value: { get_input: frost_degree}
            - name: START_YEAR
              value: { get_input: start_year}
            - name: END_YEAR
              value: { get_input: end_year}
            - name: PROBABILITY
              value: { get_input: probability}
            - name: START_LON
              value: { get_input: start_lon}
            - name: START_LAT
              value: { get_input: start_lat}
            - name: END_LON
              value: { get_input: end_lon}
            - name: END_LAT
              value: { get_input: end_lat}
            - name: PROCESS_ID
              value: { get_input: process_id}
            - name: INPUT_LOGLEVEL
              value: DEBUG
            volumeMounts:
            - mountPath: "/frostdates/export"
              name: output-storage
            volumeMounts:
            - mountPath: "/frostdates/data"
              name: data-storage
          imagePullSecrets:
          - name: euxdatregistrykey
          ports:
          - containerPort: 80
          volumes:
          - hostPath:
              path: { get_input: output_folderpath }
              type: DirectoryOrCreate
            name: output-storage
          - hostPath:
              path: { get_input: data_path }
              type: DirectoryOrCreate
            name: data-storage

    relationships:
    - type: cloudify.kubernetes.relationships.managed_by_master
      target: kubernetes_master

outputs:
  agroclimatic_frostdate_status:
    value: { get_attribute: [agroclimatic_frostdate_job, kubernetes, status, container_statuses] }  
  geojson_file_output_path:
    value: { concat: [ get_input: output_folderurl, get_input: process_id ]}
#  raster_file_wms_endpoint:
#    value: { concat: [ 'https://mapserver.test.euxdat.eu/cgi-bin/mapserv?map=/maps/xalkidiki/', get_input: process_id ,'/cri2.map&' ]}
#  raster_file_wms_layer:
#    value: "cri2"
  user_logs_output_path:
    value: { concat: [ get_input: output_folderurl, get_input: user_logs_filename ]}

